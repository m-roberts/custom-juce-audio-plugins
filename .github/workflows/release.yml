name: Create GitHub Release

on:
  workflow_dispatch:
    branches:
      - master
    inputs:
      name:
        description: "Version Number"
        required: true
        default: "0.0.1"

jobs:
  build-and-release:
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # TODO: check if Mac can build for all platforms (except standalone)
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0
        with:
          submodules: true

      # - name: Linux Setup
      #   if: runner.os == 'Linux'
      #   run: |
      #     sudo apt update

      #     # CACHE THESE PACKAGES

      #     sudo apt install --no-install-recommends -y \
      #       cmake \
      #       libasound2-dev \
      #       libcurl4-openssl-dev \
      #       libgtk-3-dev \
      #       libwebkit2gtk-4.0-dev

      # TODO: replace with top-level CMake file
      - if: runner.os == 'macOS'
        run: |
          mkdir artefacts
          for dir in ./src/*; do
            (
              cd ${dir} && \
              ln -s ../../lib/JUCE . && \
              cmake . && \
              make -j$(sysctl -n hw.logicalcpu)
              ls -lR ./*_artefacts
              mv ./*_artefacts/{AU,Standalone,VST3} ../../artefacts
            )
          done

      # - if: runner.os == 'Linux'
      #   run: |
      #     for dir in ./src; do
      #       ( cd ${dir} && cmake . && make -j$(nproc) )
      #     done

      # - name: Add msbuild to PATH
      #   if: runner.os == 'Windows'
      #   uses: microsoft/setup-msbuild@v1.1

      # # TODO: infer project name from CMakeLists.txt?
      # - if: runner.os == 'Windows'
      #   run: |
      #     ( cd hello-world && cmake . && msbuild AUDIO_PLUGIN_EXAMPLE.sln )
      #     ( cd simple-gain-control && cmake . && msbuild AUDIO_PLUGIN_EXAMPLE.sln )
      #     ( cd delay && cmake . && msbuild AUDIO_PLUGIN_EXAMPLE.sln )

      - name: Upload artefacts
        uses: actions/upload-artifact@v2
        with:
          path: ./artefacts/*
          if-no-files-found: error

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.CURRENT_VERSION }}"
          name: "v${{ env.CURRENT_VERSION }}"
          draft: false
          prerelease: false
          files: ./artefacts/*
